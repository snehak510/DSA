Given a string s, we can transform every letter individually to be lowercase or uppercase to create another string.

Return a list of all possible strings we could create. You can return the output in any order.

 

Example 1:

Input: s = "a1b2"
Output: ["a1b2","a1B2","A1b2","A1B2"]
Example 2:

Input: s = "3z4"
Output: ["3z4","3Z4"]
Example 3:

Input: s = "12345"
Output: ["12345"]
Example 4:

Input: s = "0"
Output: ["0"]
 

Constraints:

s will be a string with length between 1 and 12.
s will consist only of letters or digits.

class Solution {
    
    public void findString(char[] s,int i, ArrayList<String> ans)
    {
        //System.out.println(s);
        if(s.length==i)
        {
            ans.add(String.valueOf(s));
           // System.out.println(Arrays.toString(s));
            return;
        } 
        if(!Character.isLetter(s[i])) 
        {
            findString(s,i+1,ans);
        }
        else
        {
            s[i] = Character.toUpperCase(s[i]);
            findString(s,i+1,ans);
            s[i]= s[i];
            s[i] = Character.toLowerCase(s[i]);
            findString(s,i+1,ans);
            s[i]= s[i];
        }
        return ;
    }
   
    public List<String> letterCasePermutation(String s) {
        ArrayList<String> ans = new ArrayList<>();
        findString(s.toCharArray(),0,ans);
        return ans;
    }
}