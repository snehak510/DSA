Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.


Example 1:

Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.
Example 2:

Input: 
N = 3
arr[] = {0 1 0}
Output:
0 0 1
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Your Task:
You don't need to read input or print anything. Your task is to complete the function sort012() that takes an array arr and N as input parameters and sorts the array in-place.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)


Constraints:
1 <= N <= 10^6
0 <= A[i] <= 2


//Method 1
class Solution
{
    public static void sort012(int a[], int n)
    {
        // code here 
        int zero = 0, one = 0, two = 0;
        for(int i:a)
        {
            if(i==0)
                zero++;
            else if(i==1)
                one++;
            else if(i==2)
                two++;
        }
        
        for(int i=0;i<n;i++)
        {
            while(zero-->0)
                a[i++] = 0;
            while(one-->0)
                a[i++] = 1;
            while(two-->0)
                a[i++] = 2;
        }
        
    }
}


//Method 2 


class Solution
{
    public static void sort012(int a[], int n)
    {
        // code here 
        int low = 0, mid = 0 , high = a.length-1;
        int temp;
        while(mid<=high)
        {
            switch(a[mid])
            {
                case 0 : {
                    temp = a[low];
                    a[low] = a[mid];
                    a[mid] = temp;
                    low++;
                    mid++;
                    break;
                }
                case 1 :
                    {
                        mid++;
                        break;
                    }
                    
                case 2 : {
                    temp = a[high];
                    a[high] = a[mid];
                    a[mid] = temp;
                    high--;
                    break;
                    
                }
                
            }
        }
    }
}